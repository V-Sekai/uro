name: Uro Development x86_64

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: hexpm/elixir:1.16.2-erlang-24.3.4.17-ubuntu-focal-20240216

    steps:
      - uses: actions/checkout@v2

      - name: Install system dependencies
        run: |
          apt update
          apt install -y build-essential erlang-dev curl git libclang1

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Set up Elixir
        run: |
          mix local.hex --force
          mix local.rebar --force

      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-deps-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-deps-

      - name: Install CockroachDB
        run: |
          curl -s https://binaries.cockroachdb.com/cockroach-v23.2.0-rc.1.linux-amd64.tgz | tar xvz
          mkdir -p ${{ runner.temp }}/cockroach
          cp cockroach-v23.2.0-rc.1.linux-amd64/cockroach ${{ runner.temp }}/cockroach/
          echo "${{ runner.temp }}/cockroach" >> $GITHUB_PATH

      - name: Install dependencies
        run: mix deps.get

      - name: Compile code
        run: mix compile

      - name: Install dependencies
        run: mix deps.get

      - name: Compile code
        run: mix compile

      - name: Run test sqlite
        continue-on-error: true
        id: test_step_sqlite
        run: |
          set -e
          URO_DB_TYPE=sqlite MIX_ENV=test mix ecto.setup
          URO_DB_TYPE=sqlite MIX_ENV=test mix run priv/repo/test_seeds.exs
          URO_DB_TYPE=sqlite mix test | tee test_output_sqlite.txt

      - name: Upload sqlite test results
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: test_output_sqlite.txt

      - name: Start CockroachDB
        run: |
          cockroach start-single-node --insecure --background

      - name: Wait for CockroachDB to be ready
        run: |
          until cockroach sql --execute="SELECT 1" --insecure; do sleep 1; done

      - name: Run tests postgres
        continue-on-error: true
        id: test_step_postgres
        run: |
          set -e
          URO_DB_TYPE=postgresql MIX_ENV=test mix ecto.setup
          URO_DB_TYPE=postgresql MIX_ENV=test mix run priv/repo/test_seeds.exs
          URO_DB_TYPE=postgresql mix test | tee test_output_postgresql.txt; test ${PIPESTATUS[0]} -eq 0

      - name: Upload postgres test results
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: test_output_postgresql.txt

      - name: Check formatted code
        run: mix format --check-formatted
