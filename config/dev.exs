import Config

# Configure your database
config :uro, Uro.Repo,
  adapter: Ecto.Adapaters.Postgres,
  url:
    System.get_env(
      "DATABASE_URL",
      "postgresql://vsekai:vsekai@database:5432/vsekai?sslmode=disable"
    ),
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with webpack to recompile .js and .css sources.
config :uro, UroWeb.Endpoint,
  url: [
    host: "vsekai.local",
    port: 443,
    scheme: "https",
    path: "/api/v1"
  ],
  http: [
    port:
      "PORT"
      |> System.get_env("4000")
      |> String.to_integer()
  ],
  debug_errors: true,
  code_reloader: true,
  check_origin: false

config :cors_plug,
  origin: ["https://vsekai.local"],
  max_age: 86400

config :uro, Uro.Mailer, adapter: Swoosh.Adapters.Local

config :joken, default_signer: "gqawCOER09ZZjaN8W2QM9XT9BeJSZ9qc"

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :uro, UroWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/.*$",
      ~r"frontend/.*$"
    ]
  ]

config :waffle,
  storage_dir_prefix: "priv/waffle/private"

config :open_api_spex, :cache_adapter, OpenApiSpex.Plug.NoneCache

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"
config :logger, level: :debug

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime
