
Update: lib/uro_web/components/mishka_components.ex

       ...|
  2   2   |  defmacro __using__(_) do
  3   3   |    quote do
  4     - |      import UroWeb.Components.Accordion,
  5     - |        only: [
  6     - |          accordion: 1,
  7     - |          native_accordion: 1,
  8     - |          show_accordion_content: 2,
  9     - |          hide_accordion_content: 2
 10     - |        ]
 11     - |
 12     - |      import UroWeb.Components.Alert,
 13     - |        only: [flash: 1, flash_group: 1, alert: 1, show_alert: 2, hide_alert: 2]
 14     - |
 15     - |      import UroWeb.Components.Avatar, only: [avatar: 1, avatar_group: 1]
 16     - |      import UroWeb.Components.Badge, only: [badge: 1, hide_badge: 2, show_badge: 2]
 17     - |      import UroWeb.Components.Banner, only: [banner: 1, show_banner: 2, hide_banner: 2]
 18     - |      import UroWeb.Components.Blockquote, only: [blockquote: 1]
 19     - |      import UroWeb.Components.Breadcrumb, only: [breadcrumb: 1]
 20     - |
 21     - |      import UroWeb.Components.Button,
 22     - |        only: [button_group: 1, button: 1, input_button: 1, button_link: 1, back: 1]
 23     - |
 24     - |      import UroWeb.Components.Card,
 25     - |        only: [card: 1, card_title: 1, card_media: 1, card_content: 1, card_footer: 1]
 26     - |
 27     - |      import UroWeb.Components.Carousel,
 28     - |        only: [carousel: 1, select_carousel: 3, unselect_carousel: 3]
 29     - |
 30     - |      import UroWeb.Components.Chat, only: [chat: 1, chat_section: 1]
 31     - |      import UroWeb.Components.CheckboxCard, only: [checkbox_card: 1, checkbox_card_check: 3]
 32     - |
 33     - |      import UroWeb.Components.CheckboxField,
 34     - |        only: [checkbox_field: 1, group_checkbox: 1, checkbox_check: 3]
 35     - |
 36     - |      import UroWeb.Components.ColorField, only: [color_field: 1]
 37     - |      import UroWeb.Components.Combobox, only: [combobox: 1]
 38     - |      import UroWeb.Components.DateTimeField, only: [date_time_field: 1]
 39     - |      import UroWeb.Components.DeviceMockup, only: [device_mockup: 1]
 40     - |      import UroWeb.Components.Divider, only: [divider: 1, hr: 1]
 41     - |      import UroWeb.Components.Drawer, only: [drawer: 1, hide_drawer: 3, show_drawer: 3]
 42     - |
 43     - |      import UroWeb.Components.Dropdown,
 44     - |        only: [dropdown: 1, dropdown_trigger: 1, dropdown_content: 1]
 45     - |
 46     - |      import UroWeb.Components.EmailField, only: [email_field: 1]
 47     - |      import UroWeb.Components.Fieldset, only: [fieldset: 1]
 48     - |      import UroWeb.Components.FileField, only: [file_field: 1]
 49     - |      import UroWeb.Components.Footer, only: [footer: 1, footer_section: 1]
 50     - |      import UroWeb.Components.FormWrapper, only: [form_wrapper: 1, simple_form: 1]
 51     - |      import UroWeb.Components.Gallery, only: [gallery: 1, gallery_media: 1]
 52     - |      import UroWeb.Components.Icon, only: [icon: 1]
 53     - |      import UroWeb.Components.Image, only: [image: 1]
 54     - |      import UroWeb.Components.Indicator, only: [indicator: 1]
 55     - |      import UroWeb.Components.InputField, only: [input: 1, error: 1]
 56     - |      import UroWeb.Components.Jumbotron, only: [jumbotron: 1]
 57     - |      import UroWeb.Components.Keyboard, only: [keyboard: 1]
 58     - |      import UroWeb.Components.List, only: [list: 1, li: 1, ul: 1, ol: 1, list_group: 1]
 59     - |      import UroWeb.Components.MegaMenu, only: [mega_menu: 1]
 60     - |      import UroWeb.Components.Menu, only: [menu: 1]
 61     - |
 62     - |      import UroWeb.Components.Modal,
 63     - |        only: [modal: 1, show_modal: 2, hide_modal: 2, show: 2, hide: 2]
 64     - |
 65     - |      import UroWeb.Components.NativeSelect, only: [native_select: 1, select_option_group: 1]
 66     - |      import UroWeb.Components.Navbar, only: [navbar: 1, header: 1]
 67     - |      import UroWeb.Components.NumberField, only: [number_field: 1]
 68     - |      import UroWeb.Components.Overlay, only: [overlay: 1]
 69     - |      import UroWeb.Components.Pagination, only: [pagination: 1]
 70     - |      import UroWeb.Components.PasswordField, only: [password_field: 1]
 71     - |      import UroWeb.Components.Popover, only: [popover: 1, popover_trigger: 1, popover_content: 1]
 72     - |      import UroWeb.Components.Progress, only: [progress: 1, progress_section: 1]
 73     - |      import UroWeb.Components.RadioCard, only: [radio_card: 1, radio_card_check: 3]
 74     - |      import UroWeb.Components.RadioField, only: [radio_field: 1, group_radio: 1, radio_check: 3]
 75     - |      import UroWeb.Components.RangeField, only: [range_field: 1]
 76     - |      import UroWeb.Components.Rating, only: [rating: 1]
 77     - |      import UroWeb.Components.ScrollArea, only: [scroll_area: 1]
 78     - |      import UroWeb.Components.SearchField, only: [search_field: 1]
 79     - |      import UroWeb.Components.Sidebar, only: [sidebar: 1]
 80     - |      import UroWeb.Components.Skeleton, only: [skeleton: 1]
 81     - |      import UroWeb.Components.SpeedDial, only: [speed_dial: 1]
 82     - |      import UroWeb.Components.Spinner, only: [spinner: 1]
 83     - |      import UroWeb.Components.Stepper, only: [stepper: 1, stepper_section: 1]
 84   4   |      import UroWeb.Components.Table, only: [table: 1, th: 1, tr: 1, td: 1]
 85     - |
 86     - |      import UroWeb.Components.TableContent,
 87     - |        only: [table_content: 1, content_wrapper: 1, content_item: 1]
 88     - |
 89     - |      import UroWeb.Components.Tabs, only: [tabs: 1, show_tab: 3, hide_tab: 3]
 90     - |      import UroWeb.Components.TelField, only: [tel_field: 1]
 91     - |      import UroWeb.Components.TextField, only: [text_field: 1]
 92     - |      import UroWeb.Components.TextareaField, only: [textarea_field: 1]
 93     - |      import UroWeb.Components.Timeline, only: [timeline: 1, timeline_section: 1]
 94     - |
 95     - |      import UroWeb.Components.Toast,
 96     - |        only: [toast: 1, toast_group: 1, show_toast: 2, hide_toast: 2]
 97     - |
 98     - |      import UroWeb.Components.ToggleField, only: [toggle_field: 1, toggle_check: 2]
 99     - |      import UroWeb.Components.Tooltip, only: [tooltip: 1]
100     - |
101     - |      import UroWeb.Components.Typography,
102     - |        only: [
103     - |          h1: 1,
104     - |          h2: 1,
105     - |          h3: 1,
106     - |          h4: 1,
107     - |          h5: 1,
108     - |          h6: 1,
109     - |          p: 1,
110     - |          strong: 1,
111     - |          em: 1,
112     - |          dl: 1,
113     - |          dt: 1,
114     - |          dd: 1,
115     - |          figure: 1,
116     - |          figcaption: 1,
117     - |          abbr: 1,
118     - |          mark: 1,
119     - |          small: 1,
120     - |          s: 1,
121     - |          u: 1,
122     - |          cite: 1,
123     - |          del: 1
124     - |        ]
125     - |
126     - |      import UroWeb.Components.UrlField, only: [url_field: 1]
127     - |      import UroWeb.Components.Video, only: [video: 1]
128   5   |    end
129   6   |  end
       ...|


Create: lib/uro_web/components/table.ex

1    |defmodule UroWeb.Components.Table do
2    |  @moduledoc """
3    |  `UroWeb.Components.Table` is a versatile component for creating customizable tables in a
4    |  Phoenix LiveView application. This module offers a wide range of configurations to tailor table
5    |  presentations, including options for styling, borders, text alignment, padding, and various visual variants.
6    |
7    |  It provides components for table structure (`table/1`), headers (`th/1`), rows (`tr/1`), and cells
8    |  (`td/1`). These elements can be easily customized to fit different design requirements,
9    |  such as fixed layouts, border styles, and hover effects.
10   |
11   |  By utilizing slots, the module allows for the inclusion of dynamic content in the table's header and
12   |  footer sections, with the ability to embed icons and custom classes for a polished and interactive interface.
13   |  """
14   |
15   |  use Phoenix.Component
16   |  use Gettext, backend: UroWeb.Gettext
17   |
18   |  @doc """
19   |  Renders a customizable `table` component that supports custom styling for rows, columns,
20   |  and table headers. This component allows for specifying borders, padding, rounded corners,
21   |  and text alignment.
22   |
23   |  It also supports fixed layout and various configurations for headers, footers, and cells.
24   |
25   |  ## Examples
26   |
27   |  ```elixir
28   |  <.table>
29   |    <:header>Name</:header>
30   |    <:header>Age</:header>
31   |    <:header>Address</:header>
32   |    <:header>Email</:header>
33   |    <:header>Job</:header>
34   |    <:header>Action</:header>
35   |
36   |    <.tr>
37   |      <.td>Jim Emerald</.td>
38   |      <.td>27</.td>
39   |      <.td>London No. 1 Lake Park</.td>
40   |      <.td>test@mail.com</.td>
41   |      <.td>Frontend Developer</.td>
42   |      <.td><.rating select={3} count={5} /></.td>
43   |    </.tr>
44   |
45   |    <.tr>
46   |      <.td>Alex Brown</.td>
47   |      <.td>32</.td>
48   |      <.td>New York No. 2 River Park</.td>
49   |      <.td>alex@mail.com</.td>
50   |      <.td>Backend Developer</.td>
51   |      <.td><.rating select={4} count={5} /></.td>
52   |    </.tr>
53   |
54   |    <.tr>
55   |      <.td>John Doe</.td>
56   |      <.td>28</.td>
57   |      <.td>Los Angeles No. 3 Sunset Boulevard</.td>
58   |      <.td>john@mail.com</.td>
59   |      <.td>UI/UX Designer</.td>
60   |      <.td><.rating select={5} count={5} /></.td>
61   |    </.tr>
62   |
63   |    <:footer>Total</:footer>
64   |    <:footer>3 Employees</:footer>
65   |  </.table>
66   |
67   |
68   |  <.table id="users" rows={@users}>
69   |    <:col :let={user} label="id">{user.id}</:col>
70   |    <:col :let={user} label="username">{user.username}</:col>
71   |  </.table>
72   |  ```
73   |  """
74   |  @doc type: :component
75   |  attr :id, :string,
76   |    default: nil,
77   |    doc: "A unique identifier is used to manage state and interaction"
78   |
79   |  attr :class, :string, default: nil, doc: "Custom CSS class for additional styling"
80   |  attr :variant, :string, default: "base", doc: "Determines the style"
81   |  attr :rounded, :string, default: "", doc: "Determines the border radius"
82   |  attr :padding, :string, default: "small", doc: "Determines padding for items"
83   |  attr :text_size, :string, default: "small", doc: "Determines text size"
84   |  attr :color, :string, default: "natural", doc: "Determines color theme"
85   |  attr :border, :string, default: "extra_small", doc: "Determines border style"
86   |  attr :header_border, :string, default: "", doc: "Sets the border style for the table header"
87   |  attr :rows_border, :string, default: "", doc: "Sets the border style for rows in the table"
88   |  attr :cols_border, :string, default: "", doc: "Sets the border style for columns in the table"
89   |  attr :thead_class, :string, default: nil, doc: "Adds custom CSS classes to the table header"
90   |  attr :footer_class, :string, default: nil, doc: "Adds custom CSS classes to the table footer"
91   |  attr :table_fixed, :boolean, default: false, doc: "Enables or disables the table's fixed layout"
92   |  attr :text_position, :string, default: "left", doc: "Determines the element's text position"
93   |  attr :space, :string, default: "medium", doc: "Determines the table row spaces"
94   |
95   |  attr :rest, :global,
96   |    doc:
97   |      "Global attributes can define defaults which are merged with attributes provided by the caller"
98   |
99   |  slot :inner_block, required: false, doc: "Inner block that renders HEEx content"
100  |
101  |  slot :header do
102  |    attr :class, :any, doc: "Custom CSS class for additional styling"
103  |    attr :icon, :any, doc: "Icon displayed alongside of an item"
104  |    attr :icon_class, :any, doc: "Determines custom class for the icon"
105  |  end
106  |
107  |  slot :footer do
108  |    attr :class, :any, doc: "Custom CSS class for additional styling"
109  |    attr :icon, :any, doc: "Icon displayed alongside of an item"
110  |    attr :icon_class, :any, doc: "Determines custom class for the icon"
111  |  end
112  |
113  |  attr :rows, :list, default: []
114  |  attr :row_id, :any, default: nil, doc: "the function for generating the row id"
115  |  attr :row_click, :any, default: nil, doc: "the function for handling phx-click on each row"
116  |
117  |  attr :row_item, :any,
118  |    default: &Function.identity/1,
119  |    doc: "the function for mapping each row before calling the :col and :action slots"
120  |
121  |  slot :col, required: false do
122  |    attr :label, :string
123  |  end
124  |
125  |  slot :action, doc: "the slot for showing user actions in the last table column"
126  |
127  |  def table(assigns) do
128  |    assigns =
129  |      with %{rows: %Phoenix.LiveView.LiveStream{}} <- assigns do
130  |        assign(assigns, row_id: assigns.row_id || fn {id, _item} -> id end)
131  |      end
132  |
133  |    ~H"""
134  |    <div class="-m-1.5 overflow-x-auto">
135  |      <div class="p-1.5 min-w-full inline-block align-middle">
136  |        <div class={[
137  |          "overflow-hidden",
138  |          color_variant(@variant, @color),
139  |          text_position(@text_position),
140  |          rounded_size(@rounded, @variant),
141  |          text_size(@text_size),
142  |          border_class(@border, @variant),
143  |          padding_size(@padding),
144  |          rows_space(@space, @variant),
145  |          @header_border && header_border(@header_border, @variant),
146  |          @rows_border != "" && rows_border(@rows_border, @variant),
147  |          @cols_border && cols_border(@cols_border, @variant)
148  |        ]}>
149  |          <table
150  |            class={[
151  |              "min-w-full",
152  |              @rows != [] && "divide-y",
153  |              @table_fixed && "table-fixed",
154  |              @variant == "separated" || (@variant == "base_separated" && "border-separate"),
155  |              @class
156  |            ]}
157  |            {@rest}
158  |          >
159  |            <thead class={@thead_class}>
160  |              <.tr>
161  |                <.th
162  |                  :for={{header, index} <- Enum.with_index(@header, 1)}
163  |                  id={"#{@id}-table-header-#{index}"}
164  |                  scope="col"
165  |                  class={header[:class]}
166  |                >
167  |                  <.icon
168  |                    :if={header[:icon]}
169  |                    name={header[:icon]}
170  |                    class={["table-header-icon block me-2", header[:icon_class]]}
171  |                  />
172  |                  {render_slot(header)}
173  |                </.th>
174  |              </.tr>
175  |
176  |              <.tr :if={@col}>
177  |                <.th :for={col <- @col} class="font-normal">{col[:label]}</.th>
178  |                <.th :if={@action != []} class="relative">
179  |                  <span class="sr-only">{gettext("Actions")}</span>
180  |                </.th>
181  |              </.tr>
182  |            </thead>
183  |
184  |            <tbody
185  |              id={@id}
186  |              phx-update={match?(%Phoenix.LiveView.LiveStream{}, @rows) && "stream"}
187  |              class={@rows != [] && "divide-y"}
188  |            >
189  |              {render_slot(@inner_block)}
190  |
191  |              <.tr :for={row <- @rows} :if={@rows != []} id={@row_id && @row_id.(row)}>
192  |                <.td
193  |                  :for={{col, i} <- Enum.with_index(@col)}
194  |                  phx-click={@row_click && @row_click.(row)}
195  |                  class={@row_click && "hover:cursor-pointer"}
196  |                >
197  |                  <div class="relative">
198  |                    <span class="absolute -inset-y-px right-0 -left-4" />
199  |                    <span class={["relative", i == 0 && "font-semibold"]}>
200  |                      {render_slot(col, @row_item.(row))}
201  |                    </span>
202  |                  </div>
203  |                </.td>
204  |
205  |                <.td :if={@action} class="relative w-14 p-0">
206  |                  <div class="relative whitespace-nowrap py-4 text-right text-sm font-medium">
207  |                    <span class="absolute -inset-y-px -right-4 left-0" />
208  |                    <span :for={action <- @action} class="relative ml-4 font-semibold leading-6">
209  |                      {render_slot(action, @row_item.(row))}
210  |                    </span>
211  |                  </div>
212  |                </.td>
213  |              </.tr>
214  |            </tbody>
215  |
216  |            <tfoot :if={length(@footer) > 0} class={@footer_class}>
217  |              <.tr>
218  |                <.td
219  |                  :for={{footer, index} <- Enum.with_index(@footer, 1)}
220  |                  id={"#{@id}-table-footer-#{index}"}
221  |                  class={footer[:class]}
222  |                >
223  |                  <div class="flex items-center">
224  |                    <.icon
225  |                      :if={footer[:icon]}
226  |                      name={footer[:icon]}
227  |                      class={["table-footer-icon block me-2", footer[:icon_class]]}
228  |                    />
229  |                    {render_slot(footer)}
230  |                  </div>
231  |                </.td>
232  |              </.tr>
233  |            </tfoot>
234  |          </table>
235  |        </div>
236  |      </div>
237  |    </div>
238  |    """
239  |  end
240  |
241  |  @doc """
242  |  Renders a table header cell (`<th>`) component with customizable class and scope attributes.
243  |  This component allows for additional styling and accepts global attributes.
244  |
245  |  ## Examples
246  |
247  |  ```elixir
248  |  <.th>Column Title</.th>
249  |  ```
250  |  """
251  |  @doc type: :component
252  |  attr :id, :string,
253  |    default: nil,
254  |    doc: "A unique identifier is used to manage state and interaction"
255  |
256  |  attr :class, :string, default: nil, doc: "Custom CSS class for additional styling"
257  |  attr :scope, :string, default: nil, doc: "Specifies the scope of the table header cell"
258  |
259  |  attr :rest, :global,
260  |    doc:
261  |      "Global attributes can define defaults which are merged with attributes provided by the caller"
262  |
263  |  slot :inner_block, required: false, doc: "Inner block that renders HEEx content"
264  |
265  |  def th(assigns) do
266  |    ~H"""
267  |    <th id={@id} scope={@scope} class={["table-header", @class]} {@rest}>
268  |      {render_slot(@inner_block)}
269  |    </th>
270  |    """
271  |  end
272  |
273  |  @doc """
274  |  Renders a table row (<tr>) component with customizable class attributes.
275  |  This component allows for additional styling and accepts global attributes.
276  |
277  |  ## Examples
278  |
279  |  ```elixir
280  |  <.tr>
281  |    <.td>Data 1</.td>
282  |    <.td>Data 2</.td>
283  |  </.tr>
284  |  ```
285  |  """
286  |  @doc type: :component
287  |  attr :id, :string,
288  |    default: nil,
289  |    doc: "A unique identifier is used to manage state and interaction"
290  |
291  |  attr :class, :string, default: nil, doc: "Custom CSS class for additional styling"
292  |
293  |  attr :rest, :global,
294  |    doc:
295  |      "Global attributes can define defaults which are merged with attributes provided by the caller"
296  |
297  |  slot :inner_block, required: false, doc: "Inner block that renders HEEx content"
298  |
299  |  def tr(assigns) do
300  |    ~H"""
301  |    <tr id={@id} class={["table-row", @class]} {@rest}>
302  |      {render_slot(@inner_block)}
303  |    </tr>
304  |    """
305  |  end
306  |
307  |  @doc """
308  |  Renders a table data cell (`<td>`) component with customizable class attributes.
309  |  This component allows for additional styling and accepts global attributes.
310  |
311  |  ## Examples
312  |  ```elixir
313  |  <.td>Data</.td>
314  |  ```
315  |  """
316  |  @doc type: :component
317  |  attr :id, :string,
318  |    default: nil,
319  |    doc: "A unique identifier is used to manage state and interaction"
320  |
321  |  attr :class, :string, default: nil, doc: "Custom CSS class for additional styling"
322  |
323  |  attr :rest, :global,
324  |    doc:
325  |      "Global attributes can define defaults which are merged with attributes provided by the caller"
326  |
327  |  slot :inner_block, required: false, doc: "Inner block that renders HEEx content"
328  |
329  |  def td(assigns) do
330  |    ~H"""
331  |    <td id={@id} class={["table-data-cell", @class]} {@rest}>
332  |      {render_slot(@inner_block)}
333  |    </td>
334  |    """
335  |  end
336  |
337  |  defp rounded_size("extra_small", "separated") do
338  |    [
339  |      "[&_.border-separate_tr_td:first-child]:rounded-s-sm [&_.border-separate_tr_td:first-child]:rounded-s-sm",
340  |      "[&_.border-separate_tr_td:last-child]:rounded-e-sm [&_.border-separate_tr_td:last-child]:rounded-e-sm",
341  |      "[&_.border-separate_tr_th:first-child]:rounded-s-sm [&_.border-separate_tr_th:first-child]:rounded-s-sm",
342  |      "[&_.border-separate_tr_th:last-child]:rounded-e-sm [&_.border-separate_tr_th:last-child]:rounded-e-sm"
343  |    ]
344  |  end
345  |
346  |  defp rounded_size("small", "separated") do
347  |    [
348  |      "[&_.border-separate_tr_td:first-child]:rounded-s [&_.border-separate_tr_td:first-child]:rounded-s",
349  |      "[&_.border-separate_tr_td:last-child]:rounded-e [&_.border-separate_tr_td:last-child]:rounded-e",
350  |      "[&_.border-separate_tr_th:first-child]:rounded-s [&_.border-separate_tr_th:first-child]:rounded-s",
351  |      "[&_.border-separate_tr_th:last-child]:rounded-e [&_.border-separate_tr_th:last-child]:rounded-e"
352  |    ]
353  |  end
354  |
355  |  defp rounded_size("medium", "separated") do
356  |    [
357  |      "[&_.border-separate_tr_td:first-child]:rounded-s-md [&_.border-separate_tr_td:first-child]:rounded-s-md",
358  |      "[&_.border-separate_tr_td:last-child]:rounded-e-md [&_.border-separate_tr_td:last-child]:rounded-e-md",
359  |      "[&_.border-separate_tr_th:first-child]:rounded-s-md [&_.border-separate_tr_th:first-child]:rounded-s-md",
360  |      "[&_.border-separate_tr_th:last-child]:rounded-e-md [&_.border-separate_tr_th:last-child]:rounded-e-md"
361  |    ]
362  |  end
363  |
364  |  defp rounded_size("large", "separated") do
365  |    [
366  |      "[&_.border-separate_tr_td:first-child]:rounded-s-lg [&_.border-separate_tr_td:first-child]:rounded-s-lg",
367  |      "[&_.border-separate_tr_td:last-child]:rounded-e-lg [&_.border-separate_tr_td:last-child]:rounded-e-lg",
368  |      "[&_.border-separate_tr_th:first-child]:rounded-s-lg [&_.border-separate_tr_th:first-child]:rounded-s-lg",
369  |      "[&_.border-separate_tr_th:last-child]:rounded-e-lg [&_.border-separate_tr_th:last-child]:rounded-e-lg"
370  |    ]
371  |  end
372  |
373  |  defp rounded_size("extra_large", "separated") do
374  |    [
375  |      "[&_.border-separate_tr_td:first-child]:rounded-s-xl [&_.border-separate_tr_td:first-child]:rounded-s-xl",
376  |      "[&_.border-separate_tr_td:last-child]:rounded-e-xl [&_.border-separate_tr_td:last-child]:rounded-e-xl",
377  |      "[&_.border-separate_tr_th:first-child]:rounded-s-xl [&_.border-separate_tr_th:first-child]:rounded-s-xl",
378  |      "[&_.border-separate_tr_th:last-child]:rounded-e-xl [&_.border-separate_tr_th:last-child]:rounded-e-xl"
379  |    ]
380  |  end
381  |
382  |  defp rounded_size("extra_small", "base_separated") do
383  |    [
384  |      "[&_.border-separate_tr_td:first-child]:rounded-s-sm [&_.border-separate_tr_td:first-child]:rounded-s-sm",
385  |      "[&_.border-separate_tr_td:last-child]:rounded-e-sm [&_.border-separate_tr_td:last-child]:rounded-e-sm",
386  |      "[&_.border-separate_tr_th:first-child]:rounded-s-sm [&_.border-separate_tr_th:first-child]:rounded-s-sm",
387  |      "[&_.border-separate_tr_th:last-child]:rounded-e-sm [&_.border-separate_tr_th:last-child]:rounded-e-sm"
388  |    ]
389  |  end
390  |
391  |  defp rounded_size("small", "base_separated") do
392  |    [
393  |      "[&_.border-separate_tr_td:first-child]:rounded-s [&_.border-separate_tr_td:first-child]:rounded-s",
394  |      "[&_.border-separate_tr_td:last-child]:rounded-e [&_.border-separate_tr_td:last-child]:rounded-e",
395  |      "[&_.border-separate_tr_th:first-child]:rounded-s [&_.border-separate_tr_th:first-child]:rounded-s",
396  |      "[&_.border-separate_tr_th:last-child]:rounded-e [&_.border-separate_tr_th:last-child]:rounded-e"
397  |    ]
398  |  end
399  |
400  |  defp rounded_size("medium", "base_separated") do
401  |    [
402  |      "[&_.border-separate_tr_td:first-child]:rounded-s-md [&_.border-separate_tr_td:first-child]:rounded-s-md",
403  |      "[&_.border-separate_tr_td:last-child]:rounded-e-md [&_.border-separate_tr_td:last-child]:rounded-e-md",
404  |      "[&_.border-separate_tr_th:first-child]:rounded-s-md [&_.border-separate_tr_th:first-child]:rounded-s-md",
405  |      "[&_.border-separate_tr_th:last-child]:rounded-e-md [&_.border-separate_tr_th:last-child]:rounded-e-md"
406  |    ]
407  |  end
408  |
409  |  defp rounded_size("large", "base_separated") do
410  |    [
411  |      "[&_.border-separate_tr_td:first-child]:rounded-s-lg [&_.border-separate_tr_td:first-child]:rounded-s-lg",
412  |      "[&_.border-separate_tr_td:last-child]:rounded-e-lg [&_.border-separate_tr_td:last-child]:rounded-e-lg",
413  |      "[&_.border-separate_tr_th:first-child]:rounded-s-lg [&_.border-separate_tr_th:first-child]:rounded-s-lg",
414  |      "[&_.border-separate_tr_th:last-child]:rounded-e-lg [&_.border-separate_tr_th:last-child]:rounded-e-lg"
415  |    ]
416  |  end
417  |
418  |  defp rounded_size("extra_large", "base_separated") do
419  |    [
420  |      "[&_.border-separate_tr_td:first-child]:rounded-s-xl [&_.border-separate_tr_td:first-child]:rounded-s-xl",
421  |      "[&_.border-separate_tr_td:last-child]:rounded-e-xl [&_.border-separate_tr_td:last-child]:rounded-e-xl",
422  |      "[&_.border-separate_tr_th:first-child]:rounded-s-xl [&_.border-separate_tr_th:first-child]:rounded-s-xl",
423  |      "[&_.border-separate_tr_th:last-child]:rounded-e-xl [&_.border-separate_tr_th:last-child]:rounded-e-xl"
424  |    ]
425  |  end
426  |
427  |  defp rounded_size("extra_small", _), do: "rounded-sm"
428  |
429  |  defp rounded_size("small", _), do: "rounded"
430  |
431  |  defp rounded_size("medium", _), do: "rounded-md"
432  |
433  |  defp rounded_size("large", _), do: "rounded-lg"
434  |
435  |  defp rounded_size("extra_large", _), do: "rounded-xl"
436  |
437  |  defp rounded_size(params, _) when is_binary(params), do: [params]
438  |
439  |  defp text_size("extra_small"), do: "text-xs"
440  |  defp text_size("small"), do: "text-sm"
441  |  defp text_size("medium"), do: "text-base"
442  |  defp text_size("large"), do: "text-lg"
443  |  defp text_size("extra_large"), do: "text-xl"
444  |  defp text_size(params) when is_binary(params), do: [params]
445  |
446  |  defp text_position("left"), do: "[&_table]:text-left [&_table_thead]:text-left"
447  |  defp text_position("right"), do: "[&_table]:text-right [&_table_thead]:text-right"
448  |  defp text_position("center"), do: "[&_table]:text-center [&_table_thead]:text-center"
449  |  defp text_position("justify"), do: "[&_table]:text-justify [&_table_thead]:text-justify"
450  |  defp text_position("start"), do: "[&_table]:text-start [&_table_thead]:text-start"
451  |  defp text_position("end"), do: "[&_table]:text-end [&_table_thead]:text-end"
452  |  defp text_position(params) when is_binary(params), do: params
453  |
454  |  defp border_class(_, variant)
455  |       when variant in [
456  |              "default",
457  |              "shadow",
458  |              "transparent",
459  |              "stripped",
460  |              "hoverable",
461  |              "separated",
462  |              "base_separated"
463  |            ],
464  |       do: nil
465  |
466  |  defp border_class("extra_small", _), do: "border"
467  |  defp border_class("small", _), do: "border-2"
468  |  defp border_class("medium", _), do: "border-[3px]"
469  |  defp border_class("large", _), do: "border-4"
470  |  defp border_class("extra_large", _), do: "border-[5px]"
471  |  defp border_class(params, _) when is_binary(params), do: [params]
472  |
473  |  defp cols_border(_, variant)
474  |       when variant in ["default", "shadow", "transparent", "stripped", "hoverable", "separated"],
475  |       do: nil
476  |
477  |  defp cols_border("extra_small", _) do
478  |    [
479  |      "[&_table_thead_th:not(:last-child)]:border-e",
480  |      "[&_table_tbody_td:not(:last-child)]:border-e",
481  |      "[&_table_tfoot_td:not(:last-child)]:border-e"
482  |    ]
483  |  end
484  |
485  |  defp cols_border("small", _) do
486  |    [
487  |      "[&_table_thead_th:not(:last-child)]:border-e-2",
488  |      "[&_table_tbody_td:not(:last-child)]:border-e-2",
489  |      "[&_table_tfoot_td:not(:last-child)]:border-e-2"
490  |    ]
491  |  end
492  |
493  |  defp cols_border("medium", _) do
494  |    [
495  |      "[&_table_thead_th:not(:last-child)]:border-e-[3px]",
496  |      "[&_table_tbody_td:not(:last-child)]:border-e-[3px]",
497  |      "[&_table_tfoot_td:not(:last-child)]:border-e-[3px]"
498  |    ]
499  |  end
500  |
501  |  defp cols_border("large", _) do
502  |    [
503  |      "[&_table_thead_th:not(:last-child)]:border-e-4",
504  |      "[&_table_tbody_td:not(:last-child)]:border-e-4",
505  |      "[&_table_tfoot_td:not(:last-child)]:border-e-4"
506  |    ]
507  |  end
508  |
509  |  defp cols_border("extra_large", _) do
510  |    [
511  |      "[&_table_thead_th:not(:last-child)]:border-e-[5px]",
512  |      "[&_table_tbody_td:not(:last-child)]:border-e-[5px]",
513  |      "[&_table_tfoot_td:not(:last-child)]:border-e-[5px]"
514  |    ]
515  |  end
516  |
517  |  defp cols_border(params, _) when is_binary(params), do: [params]
518  |
519  |  defp rows_border(_, variant)
520  |       when variant in ["default", "shadow", "transparent", "stripped", "hoverable", "separated"],
521  |       do: nil
522  |
523  |  defp rows_border("none", "base_separated"), do: nil
524  |
525  |  defp rows_border("extra_small", "base_separated") do
526  |    [
527  |      "[&_td]:border-y [&_th]:border-y",
528  |      "[&_td:first-child]:border-s [&_th:first-child]:border-s",
529  |      "[&_td:last-child]:border-e [&_th:last-child]:border-e"
530  |    ]
531  |  end
532  |
533  |  defp rows_border("small", "base_separated") do
534  |    [
535  |      "[&_td]:border-y-2 [&_th]:border-y-2",
536  |      "[&_td:first-child]:border-s-2 [&_th:first-child]:border-s-2",
537  |      "[&_td:last-child]:border-e-2 [&_th:last-child]:border-e-2"
538  |    ]
539  |  end
540  |
541  |  defp rows_border("medium", "base_separated") do
542  |    [
543  |      "[&_td]:border-y-[3px] [&_th]:border-y-[3px]",
544  |      "[&_td:first-child]:border-s-3 [&_th:first-child]:border-s-3",
545  |      "[&_td:last-child]:border-e-3 [&_th:last-child]:border-e-3"
546  |    ]
547  |  end
548  |
549  |  defp rows_border("large", "base_separated") do
550  |    [
551  |      "[&_td]:border-y-4 [&_th]:border-y-4",
552  |      "[&_td:first-child]:border-s-4 [&_th:first-child]:border-s-4",
553  |      "[&_td:last-child]:border-e-4 [&_th:last-child]:border-e-4"
554  |    ]
555  |  end
556  |
557  |  defp rows_border("extra_large", "base_separated") do
558  |    [
559  |      "[&_td]:border-y-[5px] [&_th]:border-y-[5px]",
560  |      "[&_td:first-child]:border-s-5 [&_th:first-child]:border-s-5",
561  |      "[&_td:last-child]:border-e-5 [&_th:last-child]:border-e-5"
562  |    ]
563  |  end
564  |
565  |  defp rows_border("none", _), do: nil
566  |  defp rows_border("extra_small", _), do: "[&_table_tbody]:divide-y"
567  |  defp rows_border("small", _), do: "[&_table_tbody]:divide-y-2"
568  |  defp rows_border("medium", _), do: "[&_table_tbody]:divide-y-[3px]"
569  |  defp rows_border("large", _), do: "[&_table_tbody]:divide-y-4"
570  |  defp rows_border("extra_large", _), do: "[&_table_tbody]:divide-y-[5px]"
571  |  defp rows_border(params, _) when is_binary(params), do: [params]
572  |
573  |  defp header_border(_, variant)
574  |       when variant in [
575  |              "default",
576  |              "shadow",
577  |              "transparent",
578  |              "stripped",
579  |              "hoverable",
580  |              "separated",
581  |              "base_separated"
582  |            ],
583  |       do: nil
584  |
585  |  defp header_border("extra_small", _), do: "[&_table]:divide-y"
586  |  defp header_border("small", _), do: "[&_table]:divide-y-2"
587  |  defp header_border("medium", _), do: "[&_table]:divide-y-[3px]"
588  |  defp header_border("large", _), do: "[&_table]:divide-y-4"
589  |  defp header_border("extra_large", _), do: "[&_table]:divide-y-[5px]"
590  |  defp header_border(params, _) when is_binary(params), do: [params]
591  |
592  |  defp rows_space(_, variant)
593  |       when variant in [
594  |              "default",
595  |              "shadow",
596  |              "transparent",
597  |              "stripped",
598  |              "hoverable",
599  |              "bordered",
600  |              "base",
601  |              "base_hoverable",
602  |              "base_stripped",
603  |              "outline"
604  |            ],
605  |       do: nil
606  |
607  |  defp rows_space("extra_small", _), do: "[&_table]:border-spacing-y-0.5"
608  |  defp rows_space("small", _), do: "[&_table]:border-spacing-y-1"
609  |  defp rows_space("medium", _), do: "[&_table]:border-spacing-y-2"
610  |  defp rows_space("large", _), do: "[&_table]:border-spacing-y-3"
611  |  defp rows_space("extra_large", _), do: "[&_table]:border-spacing-y-4"
612  |  defp rows_space(params, _) when is_binary(params), do: [params]
613  |
614  |  defp padding_size("extra_small") do
615  |    [
616  |      "[&_table_.table-data-cell]:px-3 [&_table_.table-data-cell]:py-1.5",
617  |      "[&_table_.table-header]:px-3 [&_table_.table-header]:py-1.5"
618  |    ]
619  |  end
620  |
621  |  defp padding_size("small") do
622  |    [
623  |      "[&_table_.table-data-cell]:px-4 [&_table_.table-data-cell]:py-2",
624  |      "[&_table_.table-header]:px-4 [&_table_.table-header]:py-2"
625  |    ]
626  |  end
627  |
628  |  defp padding_size("medium") do
629  |    [
630  |      "[&_table_.table-data-cell]:px-5 [&_table_.table-data-cell]:py-2.5",
631  |      "[&_table_.table-header]:px-5 [&_table_.table-header]:py-2.5"
632  |    ]
633  |  end
634  |
635  |  defp padding_size("large") do
636  |    [
637  |      "[&_table_.table-data-cell]:px-6 [&_table_.table-data-cell]:py-3",
638  |      "[&_table_.table-header]:px-6 [&_table_.table-header]:py-3"
639  |    ]
640  |  end
641  |
642  |  defp padding_size("extra_large") do
643  |    [
644  |      "[&_table_.table-data-cell]:px-7 [&_table_.table-data-cell]:py-3.5",
645  |      "[&_table_.table-header]:px-7 [&_table_.table-header]:py-3.5"
646  |    ]
647  |  end
648  |
649  |  defp padding_size(params) when is_binary(params), do: params
650  |
651  |  defp color_variant("base", _) do
652  |    [
653  |      "[&_table]:bg-white dark:[&_table]:bg-[#18181B] [&_table]:text-[#09090b] dark:[&_table]:text-[#FAFAFA]",
654  |      "border-[#e4e4e7] dark:border-[#27272a]",
655  |      "[&_*]:divide-[#e4e4e7] [&_td]:border-[#e4e4e7] [&_th]:border-[#e4e4e7]",
656  |      "dark:[&_*]:divide-[#27272a] dark:[&_td]:border-[#27272a] dark:[&_th]:border-[#27272a]",
657  |      "shadow-sm"
658  |    ]
659  |  end
660  |
661  |  defp color_variant("base_separated", _) do
662  |    [
663  |      "[&_table_tr]:bg-white [&_table]:text-[#09090b] dark:[&_table_tr]:bg-[#18181B] dark:[&_table]:text-[#FAFAFA]",
664  |      "[&_td]:border-[#e4e4e7] dark:[&_td]:border-[#27272a]",
665  |      "[&_th]:border-[#e4e4e7] dark:[&_th]:border-[#27272a]"
666  |    ]
667  |  end
668  |
669  |  defp color_variant("base_hoverable", _) do
670  |    [
671  |      "[&_table]:bg-white [&_table]:text-[#09090b] dark:[&_table]:bg-[#18181B] dark:[&_table]:text-[#FAFAFA]",
672  |      "hover:[&_table_tbody_tr]:bg-[#e4e4e7] dark:hover:[&_table_tbody_tr]:bg-[#27272a]",
673  |      "border-[#e4e4e7] dark:border-[#27272a]",
674  |      "[&_*]:divide-[#e4e4e7] [&_td]:border-[#e4e4e7] [&_th]:border-[#e4e4e7]",
675  |      "dark:[&_*]:divide-[#27272a] dark:[&_td]:border-[#27272a] dark:[&_th]:border-[#27272a]"
676  |    ]
677  |  end
678  |
679  |  defp color_variant("base_stripped", _) do
680  |    [
681  |      "[&_table]:bg-white [&_table]:text-[#09090b] dark:[&_table]:bg-[#18181B] dark:[&_table]:text-[#FAFAFA]",
682  |      "odd:[&_table_tbody_tr]:bg-[#F8F9FA] dark:odd:[&_table_tbody_tr]:bg-[#242424]",
683  |      "border-[#e4e4e7] dark:border-[#27272a]",
684  |      "[&_*]:divide-[#e4e4e7] [&_td]:border-[#e4e4e7] [&_th]:border-[#e4e4e7]",
685  |      "dark:[&_*]:divide-[#27272a] dark:[&_td]:border-[#27272a] dark:[&_th]:border-[#27272a]"
686  |    ]
687  |  end
688  |
689  |  defp color_variant("bordered", "white") do
690  |    "[&_table]:bg-white text-[#3E3E3E] border-[#DADADA] [&_*]:divide-[#DADADA] [&_td]:border-[#DADADA] [&_th]:border-[#DADADA]"
691  |  end
692  |
693  |  defp color_variant("bordered", "natural") do
694  |    [
695  |      "[&_table]:bg-[#F3F3F3] dark:[&_table]:bg-[#4B4B4B] [&_table]:text-[#282828] dark:[&_table]:text-[#E8E8E8]",
696  |      "border-[#282828] dark:border-[#E8E8E8]",
697  |      "[&_*]:divide-[#282828] [&_td]:border-[#282828] [&_th]:border-[#282828]",
698  |      "dark:[&_*]:divide-[#E8E8E8] dark:[&_td]:border-[#E8E8E8] dark:[&_th]:border-[#E8E8E8]"
699  |    ]
700  |  end
701  |
702  |  defp color_variant("bordered", "primary") do
703  |    [
704  |      "[&_table]:bg-[#E2F8FB] dark:[&_table]:bg-[#002D33] [&_table]:text-[#016974] dark:[&_table]:text-[#77D5E3]",
705  |      "border-[#016974] dark:border-[#77D5E3]",
706  |      "[&_*]:divide-[#016974] [&_td]:border-[#016974] [&_th]:border-[#016974]",
707  |      "dark:[&_*]:divide-[#77D5E3] dark:[&_td]:border-[#77D5E3] dark:[&_th]:border-[#77D5E3]"
708  |    ]
709  |  end
710  |
711  |  defp color_variant("bordered", "secondary") do
712  |    [
713  |      "[&_table]:bg-[#EFF4FE] dark:[&_table]:bg-[#002661] [&_table]:text-[#175BCC] dark:[&_table]:text-[#A9C9FF]",
714  |      "border-[#175BCC] dark:border-[#A9C9FF]",
715  |      "[&_*]:divide-[#175BCC] [&_td]:border-[#175BCC] [&_th]:border-[#175BCC]",
716  |      "dark:[&_*]:divide-[#A9C9FF] dark:[&_td]:border-[#A9C9FF] dark:[&_th]:border-[#A9C9FF]"
717  |    ]
718  |  end
719  |
720  |  defp color_variant("bordered", "success") do
721  |    [
722  |      "[&_table]:bg-[#EAF6ED] dark:[&_table]:bg-[#002F14] [&_table]:text-[#166C3B] dark:[&_table]:text-[#7FD99A]",
723  |      "border-[#166C3B] dark:border-[#7FD99A]",
724  |      "[&_*]:divide-[#166C3B] [&_td]:border-[#166C3B] [&_th]:border-[#166C3B]",
725  |      "dark:[&_*]:divide-[#7FD99A] dark:[&_td]:border-[#7FD99A] dark:[&_th]:border-[#7FD99A]"
726  |    ]
727  |  end
728  |
729  |  defp color_variant("bordered", "warning") do
730  |    [
731  |      "[&_table]:bg-[#FFF7E6] dark:[&_table]:bg-[#322300] [&_table]:text-[#976A01] dark:[&_table]:text-[#FDD067]",
732  |      "border-[#976A01] dark:border-[#FDD067]",
733  |      "[&_*]:divide-[#976A01] [&_td]:border-[#976A01] [&_th]:border-[#976A01]",
734  |      "dark:[&_*]:divide-[#FDD067] dark:[&_td]:border-[#FDD067] dark:[&_th]:border-[#FDD067]"
735  |    ]
736  |  end
737  |
738  |  defp color_variant("bordered", "danger") do
739  |    [
740  |      "[&_table]:bg-[#FFF0EE] dark:[&_table]:bg-[#520810] [&_table]:text-[#BB032A] dark:[&_table]:text-[#FFB2AB]",
741  |      "border-[#BB032A] dark:border-[#FFB2AB]",
742  |      "[&_*]:divide-[#BB032A] [&_td]:border-[#BB032A] [&_th]:border-[#BB032A]",
743  |      "dark:[&_*]:divide-[#FFB2AB] dark:[&_td]:border-[#FFB2AB] dark:[&_th]:border-[#FFB2AB]"
744  |    ]
745  |  end
746  |
747  |  defp color_variant("bordered", "info") do
748  |    [
749  |      "[&_table]:bg-[#E7F6FD] dark:[&_table]:bg-[#03212F] [&_table]:text-[#0B84BA] dark:[&_table]:text-[#6EC9F2]",
750  |      "border-[#0B84BA] dark:border-[#6EC9F2]",
751  |      "[&_*]:divide-[#0B84BA] [&_td]:border-[#0B84BA] [&_th]:border-[#0B84BA]",
752  |      "dark:[&_*]:divide-[#6EC9F2] dark:[&_td]:border-[#6EC9F2] dark:[&_th]:border-[#6EC9F2]"
753  |    ]
754  |  end
755  |
756  |  defp color_variant("bordered", "misc") do
757  |    [
758  |      "[&_table]:bg-[#F6F0FE] dark:[&_table]:bg-[#221431] [&_table]:text-[#653C94] dark:[&_table]:text-[#CBA2FA]",
759  |      "border-[#653C94] dark:border-[#CBA2FA]",
760  |      "[&_*]:divide-[#653C94] [&_td]:border-[#653C94] [&_th]:border-[#653C94]",
761  |      "dark:[&_*]:divide-[#CBA2FA] dark:[&_td]:border-[#CBA2FA] dark:[&_th]:border-[#CBA2FA]"
762  |    ]
763  |  end
764  |
765  |  defp color_variant("bordered", "dawn") do
766  |    [
767  |      "[&_table]:bg-[#FBF2ED] dark:[&_table]:bg-[#2A190E] [&_table]:text-[#7E4B2A] dark:[&_table]:text-[#E4B190]",
768  |      "border-[#7E4B2A] dark:border-[#E4B190]",
769  |      "[&_*]:divide-[#7E4B2A] [&_td]:border-[#7E4B2A] [&_th]:border-[#7E4B2A]",
770  |      "dark:[&_*]:divide-[#E4B190] dark:[&_td]:border-[#E4B190] dark:[&_th]:border-[#E4B190]"
771  |    ]
772  |  end
773  |
774  |  defp color_variant("bordered", "silver") do
775  |    [
776  |      "[&_table]:bg-[#4B4B4B] dark:[&_table]:bg-[#2A190E] [&_table]:text-[#727272] dark:[&_table]:text-[#BBBBBB]",
777  |      "border-[#727272] dark:border-[#BBBBBB]",
778  |      "[&_*]:divide-[#727272] [&_td]:border-[#727272] [&_th]:border-[#727272]",
779  |      "dark:[&_*]:divide-[#BBBBBB] dark:[&_td]:border-[#BBBBBB] dark:[&_th]:border-[#BBBBBB]"
780  |    ]
781  |  end
782  |
783  |  defp color_variant("bordered", "dark") do
784  |    "[&_table]:bg-[#282828] text-white border-[#050404] [&_*]:divide-[#050404] [&_td]:border-[#050404] [&_th]:border-[#050404]"
785  |  end
786  |
787  |  defp color_variant("outline", "natural") do
788  |    [
789  |      "[&_table]:text-[#4B4B4B] border-[#4B4B4B] dark:[&_table]:text-[#DDDDDD] dark:border-[#DDDDDD]",
790  |      "[&_*]:divide-[#4B4B4B] [&_td]:border-[#4B4B4B] [&_th]:border-[#4B4B4B]",
791  |      "dark:[&_*]:divide-[#DDDDDD] dark:[&_td]:border-[#DDDDDD] dark:[&_th]:border-[#DDDDDD]"
792  |    ]
793  |  end
794  |
795  |  defp color_variant("outline", "primary") do
796  |    [
797  |      "[&_table]:text-[#007F8C] border-[#007F8C] dark:[&_table]:text-[#01B8CA] dark:border-[#01B8CA]",
798  |      "[&_*]:divide-[#007F8C] [&_td]:border-[#007F8C] [&_th]:border-[#007F8C]",
799  |      "dark:[&_*]:divide-[#01B8CA] dark:[&_td]:border-[#01B8CA] dark:[&_th]:border-[#01B8CA]"
800  |    ]
801  |  end
802  |
803  |  defp color_variant("outline", "secondary") do
804  |    [
805  |      "[&_table]:text-[#007F8C] border-[#007F8C] dark:[&_table]:text-[#01B8CA] dark:border-[#01B8CA]",
806  |      "[&_*]:divide-[#007F8C] [&_td]:border-[#007F8C] [&_th]:border-[#007F8C]",
807  |      "dark:[&_*]:divide-[#01B8CA] dark:[&_td]:border-[#01B8CA] dark:[&_th]:border-[#01B8CA]"
808  |    ]
809  |  end
810  |
811  |  defp color_variant("outline", "success") do
812  |    [
813  |      "[&_table]:text-[#0E8345] border-[#0E8345] dark:[&_table]:text-[#06C167] dark:border-[#06C167]",
814  |      "[&_*]:divide-[#0E8345] [&_td]:border-[#0E8345] [&_th]:border-[#0E8345]",
815  |      "dark:[&_*]:divide-[#06C167] dark:[&_td]:border-[#06C167] dark:[&_th]:border-[#06C167]"
816  |    ]
817  |  end
818  |
819  |  defp color_variant("outline", "warning") do
820  |    [
821  |      "[&_table]:text-[#CA8D01] border-[#CA8D01] dark:[&_table]:text-[#FDC034] dark:border-[#FDC034]",
822  |      "[&_*]:divide-[#CA8D01] [&_td]:border-[#CA8D01] [&_th]:border-[#CA8D01]",
823  |      "dark:[&_*]:divide-[#FDC034] dark:[&_td]:border-[#FDC034] dark:[&_th]:border-[#FDC034]"
824  |    ]
825  |  end
826  |
827  |  defp color_variant("outline", "danger") do
828  |    [
829  |      "[&_table]:text-[#DE1135] border-[#DE1135] dark:[&_table]:text-[#FC7F79] dark:border-[#FC7F79]",
830  |      "[&_*]:divide-[#DE1135] [&_td]:border-[#DE1135] [&_th]:border-[#DE1135]",
831  |      "dark:[&_*]:divide-[#FC7F79] dark:[&_td]:border-[#FC7F79] dark:[&_th]:border-[#FC7F79]"
832  |    ]
833  |  end
834  |
835  |  defp color_variant("outline", "info") do
836  |    [
837  |      "[&_table]:text-[#0B84BA] border-[#0B84BA] dark:[&_table]:text-[#3EB7ED] dark:border-[#3EB7ED]",
838  |      "[&_*]:divide-[#0B84BA] [&_td]:border-[#0B84BA] [&_th]:border-[#0B84BA]",
839  |      "dark:[&_*]:divide-[#3EB7ED] dark:[&_td]:border-[#3EB7ED] dark:[&_th]:border-[#3EB7ED]"
840  |    ]
841  |  end
842  |
843  |  defp color_variant("outline", "misc") do
844  |    [
845  |      "[&_table]:text-[#8750C5] border-[#8750C5] dark:[&_table]:text-[#BA83F9] dark:border-[#BA83F9]",
846  |      "[&_*]:divide-[#8750C5] [&_td]:border-[#8750C5] [&_th]:border-[#8750C5]",
847  |      "dark:[&_*]:divide-[#BA83F9] dark:[&_td]:border-[#BA83F9] dark:[&_th]:border-[#BA83F9]"
848  |    ]
849  |  end
850  |
851  |  defp color_variant("outline", "dawn") do
852  |    [
853  |      "[&_table]:text-[#A86438] border-[#A86438] dark:[&_table]:text-[#DB976B] dark:border-[#DB976B]",
854  |      "[&_*]:divide-[#A86438] [&_td]:border-[#A86438] [&_th]:border-[#A86438]",
855  |      "dark:[&_*]:divide-[#DB976B] dark:[&_td]:border-[#DB976B] dark:[&_th]:border-[#DB976B]"
856  |    ]
857  |  end
858  |
859  |  defp color_variant("outline", "silver") do
860  |    [
861  |      "[&_table]:text-[#868686] border-[#868686] dark:[&_table]:text-[#A6A6A6] dark:border-[#A6A6A6]",
862  |      "[&_*]:divide-[#868686] [&_td]:border-[#868686] [&_th]:border-[#868686]",
863  |      "dark:[&_*]:divide-[#A6A6A6] dark:[&_td]:border-[#A6A6A6] dark:[&_th]:border-[#A6A6A6]"
864  |    ]
865  |  end
866  |
867  |  defp color_variant("default", "white") do
868  |    "bg-white text-black"
869  |  end
870  |
871  |  defp color_variant("default", "natural") do
872  |    "[&_table]:bg-[#4B4B4B] [&_table]:text-white dark:[&_table]:bg-[#DDDDDD] dark:[&_table]:text-black"
873  |  end
874  |
875  |  defp color_variant("default", "primary") do
876  |    "[&_table]:bg-[#007F8C] [&_table]:text-white dark:[&_table]:bg-[#01B8CA] dark:[&_table]:text-black"
877  |  end
878  |
879  |  defp color_variant("default", "secondary") do
880  |    "[&_table]:bg-[#266EF1] [&_table]:text-white dark:[&_table]:bg-[#6DAAFB] dark:[&_table]:text-black"
881  |  end
882  |
883  |  defp color_variant("default", "success") do
884  |    "[&_table]:bg-[#0E8345] [&_table]:text-white dark:[&_table]:bg-[#06C167] dark:[&_table]:text-black"
885  |  end
886  |
887  |  defp color_variant("default", "warning") do
888  |    "[&_table]:bg-[#CA8D01] [&_table]:text-white dark:[&_table]:bg-[#FDC034] dark:[&_table]:text-black"
889  |  end
890  |
891  |  defp color_variant("default", "danger") do
892  |    "[&_table]:bg-[#DE1135] [&_table]:text-white dark:[&_table]:bg-[#FC7F79] dark:[&_table]:text-black"
893  |  end
894  |
895  |  defp color_variant("default", "info") do
896  |    "[&_table]:bg-[#0B84BA] [&_table]:text-white dark:[&_table]:bg-[#3EB7ED] dark:[&_table]:text-black"
897  |  end
898  |
899  |  defp color_variant("default", "misc") do
900  |    "[&_table]:bg-[#8750C5] [&_table]:text-white dark:[&_table]:bg-[#BA83F9] dark:[&_table]:text-black"
901  |  end
902  |
903  |  defp color_variant("default", "dawn") do
904  |    "[&_table]:bg-[#A86438] [&_table]:text-white dark:[&_table]:bg-[#DB976B] dark:[&_table]:text-black"
905  |  end
906  |
907  |  defp color_variant("default", "silver") do
908  |    "[&_table]:bg-[#868686] [&_table]:text-white dark:[&_table]:bg-[#A6A6A6] dark:[&_table]:text-black"
909  |  end
910  |
911  |  defp color_variant("default", "dark") do
912  |    "[&_table]:bg-[#282828] [&_table]:text-white"
913  |  end
914  |
915  |  defp color_variant("shadow", "natural") do
916  |    [
917  |      "[&_table]:bg-[#4B4B4B] [&_table]:text-white dark:[&_table]:bg-[#DDDDDD] dark:[&_table]:text-black",
918  |      "shadow-[0px_4px_6px_-4px_rgba(134,134,134,0.5)] shadow-[0px_10px_15px_-3px_rgba(134,134,134,0.5)] dark:shadow-none"
919  |    ]
920  |  end
921  |
922  |  defp color_variant("shadow", "primary") do
923  |    [
924  |      "[&_table]:bg-[#007F8C] [&_table]:text-white dark:[&_table]:bg-[#01B8CA] dark:[&_table]:text-black",
925  |      "shadow-[0px_4px_6px_-4px_rgba(0,149,164,0.5)] shadow-[0px_10px_15px_-3px_rgba(0,149,164,0.5)] dark:shadow-none"
926  |    ]
927  |  end
928  |
929  |  defp color_variant("shadow", "secondary") do
930  |    [
931  |      "[&_table]:bg-[#266EF1] [&_table]:text-white dark:[&_table]:bg-[#6DAAFB] dark:[&_table]:text-black",
932  |      "shadow-[0px_4px_6px_-4px_rgba(6,139,238,0.5)] shadow-[0px_10px_15px_-3px_rgba(6,139,238,0.5)] dark:shadow-none"
933  |    ]
934  |  end
935  |
936  |  defp color_variant("shadow", "success") do
937  |    [
938  |      "[&_table]:bg-[#0E8345] [&_table]:text-white dark:[&_table]:bg-[#06C167] dark:[&_table]:text-black",
939  |      "shadow-[0px_4px_6px_-4px_rgba(0,154,81,0.5)] shadow-[0px_10px_15px_-3px_rgba(0,154,81,0.5)] dark:shadow-none"
940  |    ]
941  |  end
942  |
943  |  defp color_variant("shadow", "warning") do
944  |    [
945  |      "[&_table]:bg-[#CA8D01] [&_table]:text-white dark:[&_table]:bg-[#FDC034] dark:[&_table]:text-black",
946  |      "shadow-[0px_4px_6px_-4px_rgba(252,176,1,0.5)] shadow-[0px_10px_15px_-3px_rgba(252,176,1,0.5)] dark:shadow-none"
947  |    ]
948  |  end
949  |
950  |  defp color_variant("shadow", "danger") do
951  |    [
952  |      "[&_table]:bg-[#DE1135] [&_table]:text-white dark:[&_table]:bg-[#FC7F79] dark:[&_table]:text-black",
953  |      "shadow-[0px_4px_6px_-4px_rgba(248,52,70,0.5)] shadow-[0px_10px_15px_-3px_rgba(248,52,70,0.5)] dark:shadow-none"
954  |    ]
955  |  end
956  |
957  |  defp color_variant("shadow", "info") do
958  |    [
959  |      "[&_table]:bg-[#0B84BA] [&_table]:text-white dark:[&_table]:bg-[#3EB7ED] dark:[&_table]:text-black",
960  |      "shadow-[0px_4px_6px_-4px_rgba(14,165,233,0.5)] shadow-[0px_10px_15px_-3px_rgba(14,165,233,0.5)] dark:shadow-none"
961  |    ]
962  |  end
963  |
964  |  defp color_variant("shadow", "misc") do
965  |    [
966  |      "[&_table]:bg-[#8750C5] [&_table]:text-white dark:[&_table]:bg-[#BA83F9] dark:[&_table]:text-black",
967  |      "shadow-[0px_4px_6px_-4px_rgba(169,100,247,0.5)] shadow-[0px_10px_15px_-3px_rgba(169,100,247,0.5)] dark:shadow-none"
968  |    ]
969  |  end
970  |
971  |  defp color_variant("shadow", "dawn") do
972  |    [
973  |      "[&_table]:bg-[#A86438] [&_table]:text-white dark:[&_table]:bg-[#DB976B] dark:[&_table]:text-black",
974  |      "shadow-[0px_4px_6px_-4px_rgba(210,125,70,0.5)] shadow-[0px_10px_15px_-3px_rgba(210,125,70,0.5)] dark:shadow-none"
975  |    ]
976  |  end
977  |
978  |  defp color_variant("shadow", "silver") do
979  |    [
980  |      "[&_table]:bg-[#868686] [&_table]:text-white dark:[&_table]:bg-[#A6A6A6] dark:[&_table]:text-black",
981  |      "shadow-[0px_4px_6px_-4px_rgba(134,134,134,0.5)] shadow-[0px_10px_15px_-3px_rgba(134,134,134,0.5)] dark:shadow-none"
982  |    ]
983  |  end
984  |
985  |  defp color_variant("transparent", "natural") do
986  |    [
987  |      "[&_table]:text-[#4B4B4B] dark:[&_table]:text-[#DDDDDD]"
988  |    ]
989  |  end
990  |
991  |  defp color_variant("transparent", "primary") do
992  |    [
993  |      "[&_table]:text-[#007F8C] dark:[&_table]:text-[#01B8CA]"
994  |    ]
995  |  end
996  |
997  |  defp color_variant("transparent", "secondary") do
998  |    [
999  |      "[&_table]:text-[#266EF1] dark:[&_table]:text-[#6DAAFB]"
1000 |    ]
1001 |  end
1002 |
1003 |  defp color_variant("transparent", "success") do
1004 |    [
1005 |      "[&_table]:text-[#0E8345] dark:[&_table]:text-[#06C167]"
1006 |    ]
1007 |  end
1008 |
1009 |  defp color_variant("transparent", "warning") do
1010 |    [
1011 |      "[&_table]:text-[#CA8D01] dark:[&_table]:text-[#FDC034]"
1012 |    ]
1013 |  end
1014 |
1015 |  defp color_variant("transparent", "danger") do
1016 |    [
1017 |      "[&_table]:text-[#DE1135] dark:[&_table]:text-[#FC7F79]"
1018 |    ]
1019 |  end
1020 |
1021 |  defp color_variant("transparent", "info") do
1022 |    [
1023 |      "[&_table]:text-[#0B84BA] dark:[&_table]:text-[#3EB7ED]"
1024 |    ]
1025 |  end
1026 |
1027 |  defp color_variant("transparent", "misc") do
1028 |    [
1029 |      "[&_table]:text-[#8750C5] dark:[&_table]:text-[#BA83F9]"
1030 |    ]
1031 |  end
1032 |
1033 |  defp color_variant("transparent", "dawn") do
1034 |    [
1035 |      "[&_table]:text-[#A86438] dark:[&_table]:text-[#DB976B]"
1036 |    ]
1037 |  end
1038 |
1039 |  defp color_variant("transparent", "silver") do
1040 |    [
1041 |      "[&_table]:text-[#868686] dark:[&_table]:text-[#A6A6A6]"
1042 |    ]
1043 |  end
1044 |
1045 |  defp color_variant("hoverable", "white") do
1046 |    [
1047 |      "[&_table]:bg-white hover:[&_table_tbody_tr]:bg-[#DADADA] text-[#3E3E3E]"
1048 |    ]
1049 |  end
1050 |
1051 |  defp color_variant("hoverable", "natural") do
1052 |    [
1053 |      "[&_table]:bg-[#4B4B4B] [&_table]:text-white dark:[&_table]:bg-[#DDDDDD] dark:[&_table]:text-black",
1054 |      "hover:[&_table_tbody_tr]:bg-[#282828] dark:hover:[&_table_tbody_tr]:bg-[#E8E8E8]"
1055 |    ]
1056 |  end
1057 |
1058 |  defp color_variant("hoverable", "primary") do
1059 |    [
1060 |      "[&_table]:bg-[#007F8C] [&_table]:text-white dark:[&_table]:bg-[#01B8CA] dark:[&_table]:text-black",
1061 |      "hover:[&_table_tbody_tr]:bg-[#016974] dark:hover:[&_table_tbody_tr]:bg-[#77D5E3]"
1062 |    ]
1063 |  end
1064 |
1065 |  defp color_variant("hoverable", "secondary") do
1066 |    [
1067 |      "[&_table]:bg-[#266EF1] [&_table]:text-white dark:[&_table]:bg-[#6DAAFB] dark:[&_table]:text-black",
1068 |      "hover:[&_table_tbody_tr]:bg-[#175BCC] dark:hover:[&_table_tbody_tr]:bg-[#A9C9FF]"
1069 |    ]
1070 |  end
1071 |
1072 |  defp color_variant("hoverable", "success") do
1073 |    [
1074 |      "[&_table]:bg-[#0E8345] [&_table]:text-white dark:[&_table]:bg-[#06C167] dark:[&_table]:text-black",
1075 |      "hover:[&_table_tbody_tr]:bg-[#06C167] dark:hover:[&_table_tbody_tr]:bg-[#7FD99A]"
1076 |    ]
1077 |  end
1078 |
1079 |  defp color_variant("hoverable", "warning") do
1080 |    [
1081 |      "[&_table]:bg-[#CA8D01] [&_table]:text-white dark:[&_table]:bg-[#FDC034] dark:[&_table]:text-black",
1082 |      "hover:[&_table_tbody_tr]:bg-[#976A01] dark:hover:[&_table_tbody_tr]:bg-[#FDD067]"
1083 |    ]
1084 |  end
1085 |
1086 |  defp color_variant("hoverable", "danger") do
1087 |    [
1088 |      "[&_table]:bg-[#DE1135] [&_table]:text-white dark:[&_table]:bg-[#FC7F79] dark:[&_table]:text-black",
1089 |      "hover:[&_table_tbody_tr]:bg-[#BB032A] dark:hover:[&_table_tbody_tr]:bg-[#FFB2AB]"
1090 |    ]
1091 |  end
1092 |
1093 |  defp color_variant("hoverable", "info") do
1094 |    [
1095 |      "[&_table]:bg-[#0B84BA] [&_table]:text-white dark:[&_table]:bg-[#3EB7ED] dark:[&_table]:text-black",
1096 |      "hover:[&_table_tbody_tr]:bg-[#08638C] dark:hover:[&_table_tbody_tr]:bg-[#6EC9F2]"
1097 |    ]
1098 |  end
1099 |
1100 |  defp color_variant("hoverable", "misc") do
1101 |    [
1102 |      "[&_table]:bg-[#8750C5] [&_table]:text-white dark:[&_table]:bg-[#BA83F9] dark:[&_table]:text-black",
1103 |      "hover:[&_table_tbody_tr]:bg-[#653C94] dark:hover:[&_table_tbody_tr]:bg-[#CBA2FA]"
1104 |    ]
1105 |  end
1106 |
1107 |  defp color_variant("hoverable", "dawn") do
1108 |    [
1109 |      "[&_table]:bg-[#A86438] [&_table]:text-white dark:[&_table]:bg-[#DB976B] dark:[&_table]:text-black",
1110 |      "hover:[&_table_tbody_tr]:bg-[#7E4B2A] dark:hover:[&_table_tbody_tr]:bg-[#E4B190]"
1111 |    ]
1112 |  end
1113 |
1114 |  defp color_variant("hoverable", "silver") do
1115 |    [
1116 |      "[&_table]:bg-[#868686] [&_table]:text-white dark:[&_table]:bg-[#A6A6A6] dark:[&_table]:text-black",
1117 |      "hover:[&_table_tbody_tr]:bg-[#727272] dark:hover:[&_table_tbody_tr]:bg-[#BBBBBB]"
1118 |    ]
1119 |  end
1120 |
1121 |  defp color_variant("hoverable", "dark") do
1122 |    [
1123 |      "[&_table]:bg-[#282828] [&_table]:text-white hover:[&_table_tbody_tr]:bg-black"
1124 |    ]
1125 |  end
1126 |
1127 |  defp color_variant("stripped", "white") do
1128 |    [
1129 |      "[&_table]:bg-white odd:[&_table_tbody_tr]:bg-[#DADADA] text-[#3E3E3E]"
1130 |    ]
1131 |  end
1132 |
1133 |  defp color_variant("stripped", "natural") do
1134 |    [
1135 |      "[&_table]:bg-[#4B4B4B] [&_table]:text-white dark:[&_table]:bg-[#DDDDDD] dark:[&_table]:text-black",
1136 |      "odd:[&_table_tbody_tr]:bg-[#282828] dark:odd:[&_table_tbody_tr]:bg-[#E8E8E8]"
1137 |    ]
1138 |  end
1139 |
1140 |  defp color_variant("stripped", "primary") do
1141 |    [
1142 |      "[&_table]:bg-[#007F8C] [&_table]:text-white dark:[&_table]:bg-[#01B8CA] dark:[&_table]:text-black",
1143 |      "odd:[&_table_tbody_tr]:bg-[#016974] dark:odd:[&_table_tbody_tr]:bg-[#77D5E3]"
1144 |    ]
1145 |  end
1146 |
1147 |  defp color_variant("stripped", "secondary") do
1148 |    [
1149 |      "[&_table]:bg-[#266EF1] [&_table]:text-white dark:[&_table]:bg-[#6DAAFB] dark:[&_table]:text-black",
1150 |      "odd:[&_table_tbody_tr]:bg-[#175BCC] dark:odd:[&_table_tbody_tr]:bg-[#A9C9FF]"
1151 |    ]
1152 |  end
1153 |
1154 |  defp color_variant("stripped", "success") do
1155 |    [
1156 |      "[&_table]:bg-[#0E8345] [&_table]:text-white dark:[&_table]:bg-[#06C167] dark:[&_table]:text-black",
1157 |      "odd:[&_table_tbody_tr]:bg-[#06C167] dark:odd:[&_table_tbody_tr]:bg-[#7FD99A]"
1158 |    ]
1159 |  end
1160 |
1161 |  defp color_variant("stripped", "warning") do
1162 |    [
1163 |      "[&_table]:bg-[#CA8D01] [&_table]:text-white dark:[&_table]:bg-[#FDC034] dark:[&_table]:text-black",
1164 |      "odd:[&_table_tbody_tr]:bg-[#976A01] dark:odd:[&_table_tbody_tr]:bg-[#FDD067]"
1165 |    ]
1166 |  end
1167 |
1168 |  defp color_variant("stripped", "danger") do
1169 |    [
1170 |      "[&_table]:bg-[#DE1135] [&_table]:text-white dark:[&_table]:bg-[#FC7F79] dark:[&_table]:text-black",
1171 |      "odd:[&_table_tbody_tr]:bg-[#BB032A] dark:odd:[&_table_tbody_tr]:bg-[#FFB2AB]"
1172 |    ]
1173 |  end
1174 |
1175 |  defp color_variant("stripped", "info") do
1176 |    [
1177 |      "[&_table]:bg-[#0B84BA] [&_table]:text-white dark:[&_table]:bg-[#3EB7ED] dark:[&_table]:text-black",
1178 |      "odd:[&_table_tbody_tr]:bg-[#08638C] dark:odd:[&_table_tbody_tr]:bg-[#6EC9F2]"
1179 |    ]
1180 |  end
1181 |
1182 |  defp color_variant("stripped", "misc") do
1183 |    [
1184 |      "[&_table]:bg-[#8750C5] [&_table]:text-white dark:[&_table]:bg-[#BA83F9] dark:[&_table]:text-black",
1185 |      "odd:[&_table_tbody_tr]:bg-[#653C94] dark:odd:[&_table_tbody_tr]:bg-[#CBA2FA]"
1186 |    ]
1187 |  end
1188 |
1189 |  defp color_variant("stripped", "dawn") do
1190 |    [
1191 |      "[&_table]:bg-[#A86438] [&_table]:text-white dark:[&_table]:bg-[#DB976B] dark:[&_table]:text-black",
1192 |      "odd:[&_table_tbody_tr]:bg-[#7E4B2A] dark:odd:[&_table_tbody_tr]:bg-[#E4B190]"
1193 |    ]
1194 |  end
1195 |
1196 |  defp color_variant("stripped", "silver") do
1197 |    [
1198 |      "[&_table]:bg-[#868686] [&_table]:text-white dark:[&_table]:bg-[#A6A6A6] dark:[&_table]:text-black",
1199 |      "odd:[&_table_tbody_tr]:bg-[#727272] dark:odd:[&_table_tbody_tr]:bg-[#BBBBBB]"
1200 |    ]
1201 |  end
1202 |
1203 |  defp color_variant("stripped", "dark") do
1204 |    [
1205 |      "[&_table]:bg-[#282828] [&_table]:text-white odd:[&_table_tbody_tr]:bg-black"
1206 |    ]
1207 |  end
1208 |
1209 |  defp color_variant("separated", "white") do
1210 |    "[&_table_tr]:bg-white [&_table]:text-black"
1211 |  end
1212 |
1213 |  defp color_variant("separated", "natural") do
1214 |    "[&_table_tr]:bg-[#4B4B4B] [&_table]:text-white dark:[&_table_tr]:bg-[#DDDDDD] dark:[&_table]:text-black"
1215 |  end
1216 |
1217 |  defp color_variant("separated", "primary") do
1218 |    "[&_table_tr]:bg-[#007F8C] [&_table]:text-white dark:[&_table_tr]:bg-[#01B8CA] dark:[&_table]:text-black"
1219 |  end
1220 |
1221 |  defp color_variant("separated", "secondary") do
1222 |    "[&_table_tr]:bg-[#266EF1] [&_table]:text-white dark:[&_table_tr]:bg-[#6DAAFB] dark:[&_table]:text-black"
1223 |  end
1224 |
1225 |  defp color_variant("separated", "success") do
1226 |    "[&_table_tr]:bg-[#0E8345] [&_table]:text-white dark:[&_table_tr]:bg-[#06C167] dark:[&_table]:text-black"
1227 |  end
1228 |
1229 |  defp color_variant("separated", "warning") do
1230 |    "[&_table_tr]:bg-[#CA8D01] [&_table]:text-white dark:[&_table_tr]:bg-[#FDC034] dark:[&_table]:text-black"
1231 |  end
1232 |
1233 |  defp color_variant("separated", "danger") do
1234 |    "[&_table_tr]:bg-[#DE1135] [&_table]:text-white dark:[&_table_tr]:bg-[#FC7F79] dark:[&_table]:text-black"
1235 |  end
1236 |
1237 |  defp color_variant("separated", "info") do
1238 |    "[&_table_tr]:bg-[#0B84BA] [&_table]:text-white dark:[&_table_tr]:bg-[#3EB7ED] dark:[&_table]:text-black"
1239 |  end
1240 |
1241 |  defp color_variant("separated", "misc") do
1242 |    "[&_table_tr]:bg-[#8750C5] [&_table]:text-white dark:[&_table_tr]:bg-[#BA83F9] dark:[&_table]:text-black"
1243 |  end
1244 |
1245 |  defp color_variant("separated", "dawn") do
1246 |    "[&_table_tr]:bg-[#A86438] [&_table]:text-white dark:[&_table_tr]:bg-[#DB976B] dark:[&_table]:text-black"
1247 |  end
1248 |
1249 |  defp color_variant("separated", "silver") do
1250 |    "[&_table_tr]:bg-[#868686] [&_table]:text-white dark:[&_table_tr]:bg-[#A6A6A6] dark:[&_table]:text-black"
1251 |  end
1252 |
1253 |  defp color_variant("separated", "dark") do
1254 |    "[&_table_tr]:bg-[#282828] [&_table]:text-white"
1255 |  end
1256 |
1257 |  defp color_variant(params, _) when is_binary(params), do: params
1258 |
1259 |  attr :name, :string, required: true, doc: "Specifies the name of the element"
1260 |  attr :class, :any, default: nil, doc: "Custom CSS class for additional styling"
1261 |
1262 |  defp icon(%{name: "hero-" <> _, class: class} = assigns) when is_list(class) do
1263 |    ~H"""
1264 |    <span class={[@name] ++ @class} />
1265 |    """
1266 |  end
1267 |
1268 |  defp icon(%{name: "hero-" <> _} = assigns) do
1269 |    ~H"""
1270 |    <span class={[@name, @class]} />
1271 |    """
1272 |  end
1273 |end
1274 |

