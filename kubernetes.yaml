apiVersion: v1
kind: Service
metadata:
  name: vertex
  namespace: default
  labels:
    app: vertex
spec:
  type: NodePort
  ports:
  - name: http-port
    port: 4000
    protocol: TCP
  selector:
    app: vertex
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vertex-deployment
  namespace: default
  labels:
    app: vertex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vertex
  template:
    metadata:
      labels:
        app: vertex
    spec:
      serviceAccountName: cockroachdb
      volumes:
      - name: client-certs
        emptyDir: {}
      initContainers:
      # The init-certs container sends a certificate signing request to the
      # kubernetes cluster.
      # You can see pending requests using: kubectl get csr
      # CSRs can be approved using:         kubectl certificate approve <csr name>
      #
      # In addition to the client certificate and key, the init-certs entrypoint will symlink
      # the cluster CA to the certs directory.
      - name: init-certs
        image: cockroachdb/cockroach-k8s-request-cert:0.4
        imagePullPolicy: IfNotPresent
        command:
        - "/bin/ash"
        - "-ecx"
        - "/request-cert -namespace=${POD_NAMESPACE} -certs-dir=/cockroach-certs -type=client -user=vertex-prod -symlink-ca-from=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: client-certs
          mountPath: /cockroach-certs
      containers:
      - name: vertex
        env:
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: vertex-prod
              key: secret-key-base
        - name: DATABASE_PASS
          valueFrom:
            secretKeyRef:
              name: vertex-prod
              key: pass
        - name: DATABASE_URL
          value: "postgres://vertex-prod@cockroachdb-public:26257/vertex_prod?sslmode=verify-full&sslcert=/cockroach-certs/client.vertex-prod.crt&sslkey=/cockroach-certs/clientvertex-prod.key&sslrootcert=/cockroach-certs/ca.crt"
        image: groupsinfra/vertex:latest
        imagePullPolicy: Always
        volumeMounts:
        - name: client-certs
          mountPath: /cockroach-certs
        ports:
        - containerPort: 4000
          name: http
      restartPolicy: Always
